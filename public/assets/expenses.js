eval("//# sourceURL=assets/ember-cli/loader.js");

;eval("define(\"expenses/adapters/application\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n    var a;\n\n    a = DS.ActiveModelAdapter.extend({\n      host: \'http://localhost:3000\'\n    });\n\n    __exports__[\"default\"] = a;\n  });//# sourceURL=expenses/adapters/application.js");

;eval("define(\"expenses/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: \'expenses\', // TODO: loaded via config\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, \'expenses\');\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=expenses/app.js");

;eval("define(\"expenses/controllers/expense\", \n  [\"ember\",\"expenses/models/time_util\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var TimeUtil = __dependency2__[\"default\"];\n    var c;\n\n    c = Ember.ObjectController.extend({\n      getFullDate: function() {\n        var date, timeStr;\n        date = this.get(\'expenseDate\');\n        timeStr = this.get(\'expenseTime\');\n        return TimeUtil.combineDateAndTime(date, timeStr);\n      },\n      actions: {\n        save: function() {\n          this.set(\"model.expenseDt\", this.getFullDate());\n          this.get(\'model\').save();\n          return this.set(\'editMode\', false);\n        },\n        toggleEditMode: function() {\n          var val;\n          console.debug(\"toggling edit mode\");\n          val = this.get(\'editMode\');\n          return this.set(\'editMode\', !val);\n        }\n      }\n    });\n\n    __exports__[\"default\"] = c;\n  });//# sourceURL=expenses/controllers/expense.js");

;eval("define(\"expenses/models/time_util\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var m;\n\n    m = Ember.Object.extend();\n\n    m.reopenClass({\n      combineDateAndTime: function(date, timeStr) {\n        var time;\n        if (!date) {\n          return date;\n        }\n        time = moment(timeStr, \"H:mm\")._d;\n        date.setHours(time.getHours());\n        date.setMinutes(time.getMinutes());\n        return date;\n      }\n    });\n\n    __exports__[\"default\"] = m;\n  });//# sourceURL=expenses/models/time_util.js");

;eval("define(\"expenses/controllers/expenses\", \n  [\"ember\",\"expenses/models/filter\",\"expenses/models/new_expense\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Filter = __dependency2__[\"default\"];\n    var NewExpense = __dependency3__[\"default\"];\n    var c;\n\n    c = Ember.ArrayController.extend({\n      newExpense: (function() {\n        return NewExpense.create({\n          store: this.store\n        });\n      }).property(),\n      filterObj: (function() {\n        return Filter.create({\n          all: this.get(\'model\'),\n          parent: this\n        });\n      }).property(\"this.@each.amount\"),\n      actions: {\n        save: function() {\n          this.get(\'newExpense\').save();\n          return this.set(\'newExpense\', NewExpense.create({\n            store: this.store\n          }));\n        }\n      }\n    });\n\n    __exports__[\"default\"] = c;\n  });//# sourceURL=expenses/controllers/expenses.js");

;eval("define(\"expenses/models/filter\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var f, isPresent, myFilter;\n\n    myFilter = function(list, f) {\n      var res;\n      res = [];\n      list.forEach(function(obj) {\n        if (f(obj)) {\n          return res.push(obj);\n        }\n      });\n      return res;\n    };\n\n    isPresent = function(obj) {\n      return obj && obj !== \'\';\n    };\n\n    f = Ember.Object.extend({\n      dateLow: \'\',\n      dateHigh: \'\',\n      parseDate: function(str) {\n        if (isPresent(str)) {\n          return str;\n        } else {\n          return null;\n        }\n      },\n      parseNum: function(str) {\n        if (isPresent(str)) {\n          return parseInt(str);\n        } else {\n          return null;\n        }\n      },\n      filtered: (function() {\n        var amountHigh, amountLow, dateHigh, dateLow, res;\n        amountLow = this.parseNum(this.get(\'amountLow\'));\n        amountHigh = this.parseNum(this.get(\'amountHigh\'));\n        dateLow = this.parseDate(this.get(\'dateLow\'));\n        dateHigh = this.parseDate(this.get(\'dateHigh\'));\n        res = myFilter(this.get(\'all\'), function() {\n          return true;\n        });\n        if (amountLow) {\n          res = myFilter(res, function(e) {\n            return e.get(\'amount\') >= amountLow;\n          });\n        }\n        if (amountHigh) {\n          res = myFilter(res, function(e) {\n            return e.get(\'amount\') <= amountHigh;\n          });\n        }\n        if (dateLow) {\n          res = myFilter(res, function(e) {\n            return e.get(\'expenseDt\') >= dateLow;\n          });\n        }\n        if (dateHigh) {\n          res = myFilter(res, function(e) {\n            return e.get(\'expenseDt\') <= dateHigh;\n          });\n        }\n        return _.sortBy(res, function(e) {\n          return e.get(\'expenseDt\');\n        });\n      }).property(\'all.@each.amount\', \'amountLow\', \'amountHigh\', \'dateLow\', \'dateHigh\')\n    });\n\n    __exports__[\"default\"] = f;\n  });//# sourceURL=expenses/models/filter.js");

;eval("define(\"expenses/models/new_expense\", \n  [\"ember\",\"expenses/models/time_util\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var TimeUtil = __dependency2__[\"default\"];\n    var m;\n\n    m = Ember.Object.extend({\n      expenseTime: \'12:00\',\n      getFullDate: function() {\n        var date, timeStr;\n        date = this.get(\'expenseDate\');\n        timeStr = this.get(\'expenseTime\');\n        return TimeUtil.combineDateAndTime(date, timeStr);\n      },\n      createRecord: function() {\n        if (this.get(\'amount\')) {\n          return this.get(\'store\').createRecord(\'expense\', {\n            amount: parseInt(this.get(\'amount\')),\n            expenseDt: this.getFullDate(),\n            description: this.get(\"description\"),\n            comment: this.get(\'comment\')\n          });\n        } else {\n          return null;\n        }\n      },\n      reset: function() {\n        this.set(\"amount\", null);\n        this.set(\"expenseDt\", null);\n        this.set(\"description\", null);\n        this.set(\"comment\", null);\n        return this.set(\"expenseTime\", \"12:00\");\n      },\n      save: function() {\n        var record;\n        record = this.createRecord();\n        if (record) {\n          record.save();\n          return true;\n        } else {\n          return false;\n        }\n      }\n    });\n\n    __exports__[\"default\"] = m;\n  });//# sourceURL=expenses/models/new_expense.js");

;eval("define(\"expenses/controllers/login\", \n  [\"ember\",\"simple-auth/mixins/login-controller-mixin\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var LoginControllerMixin = __dependency2__[\"default\"];\n    var c;\n\n    c = Ember.Controller.extend(LoginControllerMixin, {\n      authenticator: \'simple-auth-authenticator:devise\',\n      init: function() {\n        this.set(\'identification\', \'jsmith@fake.com\');\n        return this.set(\'password\', \'password\');\n      }\n    });\n\n    __exports__[\"default\"] = c;\n  });//# sourceURL=expenses/controllers/login.js");

;eval("define(\"expenses/controllers/new_expense\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var c;\n\n    c = Ember.ObjectController.extend({\n      actions: {\n        save: function() {\n          if (this.get(\'model\').save()) {\n            return this.get(\'model\').reset();\n          } else {\n            return jQuery(\"#flash\").text(\'Missing Amount\');\n          }\n        }\n      }\n    });\n\n    __exports__[\"default\"] = c;\n  });//# sourceURL=expenses/controllers/new_expense.js");

;eval("define(\"expenses/controllers/register\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var c;\n\n    c = Ember.Controller.extend({\n      email: \'\',\n      password: \'\',\n      actions: {\n        save: function() {\n          var attrs, r;\n          console.debug(\"register save call\");\n          attrs = {\n            email: this.get(\'email\'),\n            password: this.get(\'password\'),\n            passwordConfirmation: this.get(\'password\')\n          };\n          r = this.store.createRecord(\'user\', attrs);\n          r.save();\n          return this.transitionTo(\'expenses\');\n        }\n      }\n    });\n\n    __exports__[\"default\"] = c;\n  });//# sourceURL=expenses/controllers/register.js");

;eval("define(\"expenses/controllers/summary\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var TotalWeek, Week, c;\n\n    Week = Ember.Object.extend({\n      startDate: function() {\n        var dt;\n        dt = this.get(\'expenses.firstObject.expenseDt\');\n        return moment(dt).startOf(\'week\');\n      },\n      endDate: function() {\n        var dt;\n        dt = this.get(\'expenses.firstObject.expenseDt\');\n        return moment(dt).endOf(\'week\');\n      },\n      name: (function() {\n        var e, s;\n        s = moment(this.startDate()).format(\"M/D/YY\");\n        e = moment(this.endDate()).format(\"M/D/YY\");\n        return \"\" + s + \" to \" + e;\n      }).property(\"expenses.@each.expenseDt\"),\n      amounts: Ember.computed.map(\"expenses\", function(e) {\n        return parseFloat(e.get(\'amount\'));\n      }),\n      uniqueDateCount: (function() {\n        var res;\n        res = _.map(this.get(\'expenses\'), function(e) {\n          return moment(e.get(\'expenseDt\')).startOf(\'day\').format(\"M/D/YY\");\n        });\n        return _.uniq(res).length;\n      }).property(\"expenses.@each.expenseDt\"),\n      totalAmount: Ember.computed.sum(\'amounts\'),\n      averageDailyAmount: (function() {\n        return parseFloat(this.get(\'totalAmount\')) / parseFloat(this.get(\'uniqueDateCount\'));\n      }).property(\"totalAmount\", \"dates\")\n    });\n\n    TotalWeek = Week.extend({\n      name: (function() {\n        return \"Total\";\n      }).property()\n    });\n\n    Week.reopenClass({\n      startDate: function(dt) {\n        return moment(dt).startOf(\'week\')._d;\n      }\n    });\n\n    c = Ember.ArrayController.extend({\n      totalAmount: (function() {\n        var res;\n        res = 0;\n        this.forEach(function(expense) {\n          return res += parseFloat(expense.get(\'amount\'));\n        });\n        return res;\n      }).property(\'this.@each.amount\'),\n      allExpenses: function() {\n        var res;\n        res = [];\n        this.forEach(function(e) {\n          return res.push(e);\n        });\n        return res;\n      },\n      weeks: (function() {\n        var res, unsortedWeeks, vals;\n        res = {};\n        this.forEach(function(expense) {\n          var startDate;\n          startDate = Week.startDate(expense.get(\'expenseDt\'));\n          res[startDate] = res[startDate] || [];\n          return res[startDate].push(expense);\n        });\n        vals = _.values(res);\n        unsortedWeeks = _.map(vals, function(es) {\n          return Week.create({\n            expenses: es\n          });\n        });\n        res = _.sortBy(unsortedWeeks, function(w) {\n          return w.startDate();\n        });\n        res.push(TotalWeek.create({\n          expenses: this.allExpenses()\n        }));\n        return res;\n      }).property(\"this.@each.amount\", \"this.@each.expenseDt\")\n    });\n\n    __exports__[\"default\"] = c;\n  });//# sourceURL=expenses/controllers/summary.js");

;eval("define(\"expenses/helpers/currency-amount\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var h;\n\n    h = Ember.Handlebars.makeBoundHelper(function(amt) {\n      var res;\n      res = \"\";\n      if (amt) {\n        amt = parseFloat(Math.round(amt * 100)) / 100.0;\n        res = \"$\" + amt;\n      }\n      return new Ember.Handlebars.SafeString(res);\n    });\n\n    __exports__[\"default\"] = h;\n  });//# sourceURL=expenses/helpers/currency-amount.js");

;eval("define(\"expenses/helpers/pretty-date\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var h;\n\n    h = Ember.Handlebars.makeBoundHelper(function(dt) {\n      var m, res, y;\n      res = \"\";\n      if (dt) {\n        if (!dt.getMinutes) {\n          dt = new Date();\n        }\n        m = \"\" + (dt.getMinutes());\n        if (m.length === 1) {\n          m = \"0\" + m;\n        }\n        y = (\"\" + (dt.getFullYear())).slice(2, 4);\n        res = \"\" + (dt.getMonth() + 1) + \"/\" + (dt.getDate()) + \"/\" + y;\n      }\n      return new Ember.Handlebars.SafeString(res);\n    });\n\n    h = Ember.Handlebars.makeBoundHelper(function(dt) {\n      var res;\n      res = \"\";\n      if (dt) {\n        res = moment(dt).format(\"M/D/YY\");\n      }\n      return new Ember.Handlebars.SafeString(res);\n    });\n\n    __exports__[\"default\"] = h;\n  });//# sourceURL=expenses/helpers/pretty-date.js");

;eval("define(\"expenses/helpers/pretty-time\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var h;\n\n    h = Ember.Handlebars.makeBoundHelper(function(dt) {\n      var res;\n      res = \"\";\n      if (dt) {\n        res = moment(dt).format(\"H:mm\");\n      }\n      return new Ember.Handlebars.SafeString(res);\n    });\n\n    __exports__[\"default\"] = h;\n  });//# sourceURL=expenses/helpers/pretty-time.js");

;eval("define(\"expenses/initializers/authorizer\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var a;\n\n    a = {\n      name: \'setup authorizer\',\n      initialize: function() {\n        window.ENV = window.ENV || {};\n        return window.ENV[\'simple-auth\'] = {\n          authorizer: \'simple-auth-authorizer:devise\'\n        };\n      }\n    };\n\n    __exports__[\"default\"] = a;\n  });//# sourceURL=expenses/initializers/authorizer.js");

;eval("define(\"expenses/initializers/simple-auth-devise\", \n  [\"simple-auth-devise/initializer\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var initializer = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = initializer;\n  });//# sourceURL=expenses/initializers/simple-auth-devise.js");

;eval("define(\"expenses/initializers/simple-auth-testing\", \n  [\"simple-auth-testing/initializer\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var initializer = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = initializer;\n  });//# sourceURL=expenses/initializers/simple-auth-testing.js");

;eval("define(\"expenses/initializers/simple-auth\", \n  [\"simple-auth/initializer\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var initializer = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = initializer;\n  });//# sourceURL=expenses/initializers/simple-auth.js");

;eval("define(\"expenses/models/expense\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n    var m;\n\n    m = DS.Model.extend({\n      expenseDt: DS.attr(\'date\'),\n      description: DS.attr(\'string\'),\n      userId: DS.attr(\'number\'),\n      amount: DS.attr(\'number\'),\n      comment: DS.attr(\'string\'),\n      expenseDate: (function() {\n        return this.get(\'expenseDt\');\n      }).property(\'expenseDt\'),\n      expenseTime: (function() {\n        return moment(this.get(\'expenseDt\')).format(\"H:mm\");\n      }).property(\"expenseDt\")\n    });\n\n    m.reopenClass({\n      FIXTURES: [\n        {\n          id: 1,\n          amount: 100,\n          description: \"Dinner for team\",\n          expense_dt: new Date(2014, 7, 2),\n          user_id: 1\n        }, {\n          id: 2,\n          amount: 75.42,\n          description: \"Lunch for team\",\n          expense_dt: new Date(2014, 7, 1),\n          user_id: 1\n        }, {\n          id: 3,\n          amount: 50,\n          description: \"TONER!!!!!\",\n          expense_dt: new Date(2014, 7, 1),\n          user_id: 2\n        }\n      ]\n    });\n\n    __exports__[\"default\"] = m;\n  });//# sourceURL=expenses/models/expense.js");

;eval("define(\"expenses/models/user\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n    var m;\n\n    m = DS.Model.extend({\n      email: DS.attr(\"string\"),\n      password: DS.attr(\"string\"),\n      passwordConfirmation: DS.attr(\"string\")\n    });\n\n    __exports__[\"default\"] = m;\n  });//# sourceURL=expenses/models/user.js");

;eval("define(\"expenses/router\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Router;\n\n    Router = Ember.Router.extend({\n      location: ExpensesENV.locationType\n    });\n\n    Router.map(function() {\n      this.resource(\'expenses\');\n      this.route(\'summary\');\n      this.route(\"login\");\n      return this.route(\"register\");\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=expenses/router.js");

;eval("define(\"expenses/routes/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var c;\n\n    c = Ember.Route.extend();\n\n    __exports__[\"default\"] = c;\n  });//# sourceURL=expenses/routes/application.js");

;eval("define(\"expenses/routes/expenses\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var r;\n\n    r = Ember.Route.extend({\n      model: function() {\n        return this.store.find(\'expense\');\n      }\n    });\n\n    __exports__[\"default\"] = r;\n  });//# sourceURL=expenses/routes/expenses.js");

;eval("define(\"expenses/routes/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var r;\n\n    r = Ember.Route.extend({\n      beforeModel: function() {\n        return this.transitionTo(\"expenses\");\n      }\n    });\n\n    __exports__[\"default\"] = r;\n  });//# sourceURL=expenses/routes/index.js");

;eval("define(\"expenses/routes/summary\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var r;\n\n    r = Ember.Route.extend({\n      model: function() {\n        return this.store.find(\'expense\');\n      }\n    });\n\n    __exports__[\"default\"] = r;\n  });//# sourceURL=expenses/routes/summary.js");

;eval("define(\"expenses/templates/_authstatus\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n    <a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"invalidateSession\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Logout</a>\\n  \");\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n    <span id=\\\"login-link\\\">\\n      \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"login\", options) : helperMissing.call(depth0, \"link-to\", \"login\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    </span> |\\n    <span id=\\\"register-link\\\">\\n      \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(6, program6, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"register\", options) : helperMissing.call(depth0, \"link-to\", \"register\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    </span>\\n  \");\n      return buffer;\n      }\n    function program4(depth0,data) {\n      \n      \n      data.buffer.push(\"Login\");\n      }\n\n    function program6(depth0,data) {\n      \n      \n      data.buffer.push(\"Register\");\n      }\n\n      data.buffer.push(\"<span id=\\\"auth-status\\\">\\n  \");\n      stack1 = helpers[\'if\'].call(depth0, \"session.isAuthenticated\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</span>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=expenses/templates/_authstatus.js");

;eval("define(\"expenses/templates/_displayrow\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<td class=\\\"expense-date\\\">\");\n      data.buffer.push(escapeExpression((helper = helpers[\'pretty-date\'] || (depth0 && depth0[\'pretty-date\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"expenseDt\", options) : helperMissing.call(depth0, \"pretty-date\", \"expenseDt\", options))));\n      data.buffer.push(\"</td>\\n<td class=\\\"expense-time\\\">\");\n      data.buffer.push(escapeExpression((helper = helpers[\'pretty-time\'] || (depth0 && depth0[\'pretty-time\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"expenseDt\", options) : helperMissing.call(depth0, \"pretty-time\", \"expenseDt\", options))));\n      data.buffer.push(\"</td>\\n<td class=\\\"description\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"description\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n<td class=\\\"amount\\\">\");\n      data.buffer.push(escapeExpression((helper = helpers[\'currency-amount\'] || (depth0 && depth0[\'currency-amount\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"amount\", options) : helperMissing.call(depth0, \"currency-amount\", \"amount\", options))));\n      data.buffer.push(\"</td>\\n<td class=\\\"comment\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"comment\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n<td class=\\\"edit-mode\\\"><button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"toggleEditMode\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Edit</button></td>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=expenses/templates/_displayrow.js");

;eval("define(\"expenses/templates/_editrow\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n      data.buffer.push(\"<td class=\\\"expense-date\\\">\");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"date-field-view\", {hash:{\n        \'date\': (\"expenseDate\")\n      },hashTypes:{\'date\': \"ID\"},hashContexts:{\'date\': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\"</td>\\n<td class=\\\"expense-time\\\">\");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"expenseTime\")\n      },hashTypes:{\'value\': \"ID\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"</td>\\n<td class=\\\"description\\\">\");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"description\")\n      },hashTypes:{\'value\': \"ID\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"</td>\\n<td class=\\\"amount\\\">\");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"amount\")\n      },hashTypes:{\'value\': \"ID\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"</td>\\n<td class=\\\"comment\\\">\");\n      data.buffer.push(escapeExpression((helper = helpers.textarea || (depth0 && depth0.textarea),options={hash:{\n        \'value\': (\"comment\")\n      },hashTypes:{\'value\': \"ID\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"textarea\", options))));\n      data.buffer.push(\"</td>\\n<td class=\\\"save\\\">\\n  <button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"save\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Save</button>\\n</td>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=expenses/templates/_editrow.js");

;eval("define(\"expenses/templates/_filter\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<h3>Filter</h3>\\n\\n<div id=\\\"expenses-filter\\\">\\n  <table class=\\\"table\\\">\\n    <tr>\\n      <th></th>\\n      <th>Min</th>\\n      <th></th>\\n      <th>Max</th>\\n    </tr>\\n\\n    <tr>\\n      <th>$</th>\\n      <td id=\\\"amount-low\\\">\");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"amountLow\")\n      },hashTypes:{\'value\': \"ID\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"</td>\\n      <td>to</td>\\n      <td id=\\\"amount-high\\\">\");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"amountHigh\")\n      },hashTypes:{\'value\': \"ID\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"</td>\\n    </tr>\\n\\n    <tr>\\n      <th>Date</th>\\n      <td id=\\\"date-low\\\">\");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"date-field-view\", {hash:{\n        \'date\': (\"dateLow\")\n      },hashTypes:{\'date\': \"ID\"},hashContexts:{\'date\': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\"</td>\\n      <td>to</td>\\n      <td id=\\\"date-high\\\">\");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"date-field-view\", {hash:{\n        \'date\': (\"dateHigh\")\n      },hashTypes:{\'date\': \"ID\"},hashContexts:{\'date\': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\"</td>\\n    </tr>\\n  </table>\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=expenses/templates/_filter.js");

;eval("define(\"expenses/templates/_nav\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\"Expenses\");\n      }\n\n    function program3(depth0,data) {\n      \n      \n      data.buffer.push(\"Summary\");\n      }\n\n      data.buffer.push(\"<div>\\n  \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"expenses\", options) : helperMissing.call(depth0, \"link-to\", \"expenses\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" |\\n  \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"summary\", options) : helperMissing.call(depth0, \"link-to\", \"summary\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" |\\n\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"authstatus\", options) : helperMissing.call(depth0, \"partial\", \"authstatus\", options))));\n      data.buffer.push(\"\\n</div>\\n<hr>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=expenses/templates/_nav.js");

;eval("define(\"expenses/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"nav\", options) : helperMissing.call(depth0, \"partial\", \"nav\", options))));\n      data.buffer.push(\"\\n\\n\");\n      data.buffer.push(escapeExpression((helper = helpers.render || (depth0 && depth0.render),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"flash\", options) : helperMissing.call(depth0, \"render\", \"flash\", options))));\n      data.buffer.push(\"\\n\\n<div id=\\\"main\\\">\\n  \");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=expenses/templates/application.js");

;eval("define(\"expenses/templates/expense\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"editrow\", options) : helperMissing.call(depth0, \"partial\", \"editrow\", options))));\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"displayrow\", options) : helperMissing.call(depth0, \"partial\", \"displayrow\", options))));\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n\n      stack1 = helpers[\'if\'].call(depth0, \"editMode\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      else { data.buffer.push(\'\'); }\n      \n    });\n  });//# sourceURL=expenses/templates/expense.js");

;eval("define(\"expenses/templates/expenses\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"filter\", options) : helperMissing.call(depth0, \"partial\", \"filter\", options))));\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n    <tr>\\n      \");\n      data.buffer.push(escapeExpression((helper = helpers.render || (depth0 && depth0.render),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data},helper ? helper.call(depth0, \"expense\", \"\", options) : helperMissing.call(depth0, \"render\", \"expense\", \"\", options))));\n      data.buffer.push(\"\\n    </tr>\\n  \");\n      return buffer;\n      }\n\n      stack1 = helpers[\'with\'].call(depth0, \"filterObj\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n<h3>Expenses</h3>\\n\\n<table id=\\\"expenses-table\\\" class=\'table\'>\\n  <tr>\\n    <th>Date</th>\\n    <th>Time</th>\\n    <th>Desc</th>\\n    <th>Amount</th>\\n    <th>Comment</th>\\n  </tr>\\n \\n  \");\n      stack1 = helpers.each.call(depth0, \"filterObj.filtered\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n  <tr id=\\\"new-expense\\\">\\n    \");\n      data.buffer.push(escapeExpression((helper = helpers.render || (depth0 && depth0.render),options={hash:{\n        \'editMode\': (true)\n      },hashTypes:{\'editMode\': \"BOOLEAN\"},hashContexts:{\'editMode\': depth0},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data},helper ? helper.call(depth0, \"new_expense\", \"newExpense\", options) : helperMissing.call(depth0, \"render\", \"new_expense\", \"newExpense\", options))));\n      data.buffer.push(\"\\n  </tr>\\n</table>\\n\\n<h3>Summary</h3>\\n\");\n      data.buffer.push(escapeExpression((helper = helpers.render || (depth0 && depth0.render),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data},helper ? helper.call(depth0, \"summary\", \"model\", options) : helperMissing.call(depth0, \"render\", \"summary\", \"model\", options))));\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=expenses/templates/expenses.js");

;eval("define(\"expenses/templates/flash\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<div id=\\\"flash\\\">\\n</div>\");\n      \n    });\n  });//# sourceURL=expenses/templates/flash.js");

;eval("define(\"expenses/templates/login\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n      data.buffer.push(\"<form \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"authenticate\", {hash:{\n        \'on\': (\"submit\")\n      },hashTypes:{\'on\': \"STRING\"},hashContexts:{\'on\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\">\\n  <label for=\\\"identification\\\">Login</label>\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'id\': (\"identification\"),\n        \'placeholder\': (\"Enter Login\"),\n        \'value\': (\"identification\")\n      },hashTypes:{\'id\': \"STRING\",\'placeholder\': \"STRING\",\'value\': \"ID\"},hashContexts:{\'id\': depth0,\'placeholder\': depth0,\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n  <label for=\\\"password\\\">Password</label>\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'id\': (\"password\"),\n        \'placeholder\': (\"Enter Password\"),\n        \'type\': (\"password\"),\n        \'value\': (\"password\")\n      },hashTypes:{\'id\': \"STRING\",\'placeholder\': \"STRING\",\'type\': \"STRING\",\'value\': \"ID\"},hashContexts:{\'id\': depth0,\'placeholder\': depth0,\'type\': depth0,\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n  <button type=\\\"submit\\\">Login</button>\\n</form>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=expenses/templates/login.js");

;eval("define(\"expenses/templates/new_expense\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"editrow\", options) : helperMissing.call(depth0, \"partial\", \"editrow\", options))));\n      \n    });\n  });//# sourceURL=expenses/templates/new_expense.js");

;eval("define(\"expenses/templates/register\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<h2>Register</h2>\\n\\nEmail \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"email\")\n      },hashTypes:{\'value\': \"ID\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\" <br>\\nPassword \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"password\")\n      },hashTypes:{\'value\': \"ID\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\" <br>\\n\\n<button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"save\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Register</button>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=expenses/templates/register.js");

;eval("define(\"expenses/templates/summary\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n      <tr>\\n        <td class=\\\"week\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n        <td class=\\\"amount\\\">\");\n      data.buffer.push(escapeExpression((helper = helpers[\'currency-amount\'] || (depth0 && depth0[\'currency-amount\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"totalAmount\", options) : helperMissing.call(depth0, \"currency-amount\", \"totalAmount\", options))));\n      data.buffer.push(\"</td>\\n        <td>\");\n      data.buffer.push(escapeExpression((helper = helpers[\'currency-amount\'] || (depth0 && depth0[\'currency-amount\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"averageDailyAmount\", options) : helperMissing.call(depth0, \"currency-amount\", \"averageDailyAmount\", options))));\n      data.buffer.push(\"</td>\\n      </tr>\\n    \");\n      return buffer;\n      }\n\n      data.buffer.push(\"<div class=\\\"summary-container\\\">\\n  <table id=\\\"summary\\\" class=\\\"table\\\">\\n    <tr>\\n      <th>Week</th>\\n      <th>Amount</th>\\n      <th>Daily Average</th>\\n    </tr>\\n\\n    \");\n      stack1 = helpers.each.call(depth0, \"weeks\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  </table>\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=expenses/templates/summary.js");

;eval("define(\"expenses/tests/expenses/adapters/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - expenses/adapters\');\n    test(\'expenses/adapters/application.js should pass jshint\', function() { \n      ok(true, \'expenses/adapters/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=expenses/tests/expenses/adapters/application.jshint.js");

;eval("define(\"expenses/tests/expenses/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - expenses\');\n    test(\'expenses/app.js should pass jshint\', function() { \n      ok(true, \'expenses/app.js should pass jshint.\'); \n    });\n  });//# sourceURL=expenses/tests/expenses/app.jshint.js");

;eval("define(\"expenses/tests/expenses/controllers/expense.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - expenses/controllers\');\n    test(\'expenses/controllers/expense.js should pass jshint\', function() { \n      ok(true, \'expenses/controllers/expense.js should pass jshint.\'); \n    });\n  });//# sourceURL=expenses/tests/expenses/controllers/expense.jshint.js");

;eval("define(\"expenses/tests/expenses/controllers/expenses.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - expenses/controllers\');\n    test(\'expenses/controllers/expenses.js should pass jshint\', function() { \n      ok(true, \'expenses/controllers/expenses.js should pass jshint.\'); \n    });\n  });//# sourceURL=expenses/tests/expenses/controllers/expenses.jshint.js");

;eval("define(\"expenses/tests/expenses/controllers/login.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - expenses/controllers\');\n    test(\'expenses/controllers/login.js should pass jshint\', function() { \n      ok(true, \'expenses/controllers/login.js should pass jshint.\'); \n    });\n  });//# sourceURL=expenses/tests/expenses/controllers/login.jshint.js");

;eval("define(\"expenses/tests/expenses/controllers/new_expense.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - expenses/controllers\');\n    test(\'expenses/controllers/new_expense.js should pass jshint\', function() { \n      ok(true, \'expenses/controllers/new_expense.js should pass jshint.\'); \n    });\n  });//# sourceURL=expenses/tests/expenses/controllers/new_expense.jshint.js");

;eval("define(\"expenses/tests/expenses/controllers/register.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - expenses/controllers\');\n    test(\'expenses/controllers/register.js should pass jshint\', function() { \n      ok(true, \'expenses/controllers/register.js should pass jshint.\'); \n    });\n  });//# sourceURL=expenses/tests/expenses/controllers/register.jshint.js");

;eval("define(\"expenses/tests/expenses/controllers/summary.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - expenses/controllers\');\n    test(\'expenses/controllers/summary.js should pass jshint\', function() { \n      ok(true, \'expenses/controllers/summary.js should pass jshint.\'); \n    });\n  });//# sourceURL=expenses/tests/expenses/controllers/summary.jshint.js");

;eval("define(\"expenses/tests/expenses/helpers/currency-amount.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - expenses/helpers\');\n    test(\'expenses/helpers/currency-amount.js should pass jshint\', function() { \n      ok(true, \'expenses/helpers/currency-amount.js should pass jshint.\'); \n    });\n  });//# sourceURL=expenses/tests/expenses/helpers/currency-amount.jshint.js");

;eval("define(\"expenses/tests/expenses/helpers/pretty-date.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - expenses/helpers\');\n    test(\'expenses/helpers/pretty-date.js should pass jshint\', function() { \n      ok(true, \'expenses/helpers/pretty-date.js should pass jshint.\'); \n    });\n  });//# sourceURL=expenses/tests/expenses/helpers/pretty-date.jshint.js");

;eval("define(\"expenses/tests/expenses/helpers/pretty-time.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - expenses/helpers\');\n    test(\'expenses/helpers/pretty-time.js should pass jshint\', function() { \n      ok(true, \'expenses/helpers/pretty-time.js should pass jshint.\'); \n    });\n  });//# sourceURL=expenses/tests/expenses/helpers/pretty-time.jshint.js");

;eval("define(\"expenses/tests/expenses/initializers/authorizer.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - expenses/initializers\');\n    test(\'expenses/initializers/authorizer.js should pass jshint\', function() { \n      ok(true, \'expenses/initializers/authorizer.js should pass jshint.\'); \n    });\n  });//# sourceURL=expenses/tests/expenses/initializers/authorizer.jshint.js");

;eval("define(\"expenses/tests/expenses/initializers/simple-auth-devise.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - expenses/initializers\');\n    test(\'expenses/initializers/simple-auth-devise.js should pass jshint\', function() { \n      ok(true, \'expenses/initializers/simple-auth-devise.js should pass jshint.\'); \n    });\n  });//# sourceURL=expenses/tests/expenses/initializers/simple-auth-devise.jshint.js");

;eval("define(\"expenses/tests/expenses/initializers/simple-auth-testing.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - expenses/initializers\');\n    test(\'expenses/initializers/simple-auth-testing.js should pass jshint\', function() { \n      ok(true, \'expenses/initializers/simple-auth-testing.js should pass jshint.\'); \n    });\n  });//# sourceURL=expenses/tests/expenses/initializers/simple-auth-testing.jshint.js");

;eval("define(\"expenses/tests/expenses/initializers/simple-auth.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - expenses/initializers\');\n    test(\'expenses/initializers/simple-auth.js should pass jshint\', function() { \n      ok(true, \'expenses/initializers/simple-auth.js should pass jshint.\'); \n    });\n  });//# sourceURL=expenses/tests/expenses/initializers/simple-auth.jshint.js");

;eval("define(\"expenses/tests/expenses/models/expense.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - expenses/models\');\n    test(\'expenses/models/expense.js should pass jshint\', function() { \n      ok(true, \'expenses/models/expense.js should pass jshint.\'); \n    });\n  });//# sourceURL=expenses/tests/expenses/models/expense.jshint.js");

;eval("define(\"expenses/tests/expenses/models/filter.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - expenses/models\');\n    test(\'expenses/models/filter.js should pass jshint\', function() { \n      ok(true, \'expenses/models/filter.js should pass jshint.\'); \n    });\n  });//# sourceURL=expenses/tests/expenses/models/filter.jshint.js");

;eval("define(\"expenses/tests/expenses/models/new_expense.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - expenses/models\');\n    test(\'expenses/models/new_expense.js should pass jshint\', function() { \n      ok(true, \'expenses/models/new_expense.js should pass jshint.\'); \n    });\n  });//# sourceURL=expenses/tests/expenses/models/new_expense.jshint.js");

;eval("define(\"expenses/tests/expenses/models/time_util.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - expenses/models\');\n    test(\'expenses/models/time_util.js should pass jshint\', function() { \n      ok(true, \'expenses/models/time_util.js should pass jshint.\'); \n    });\n  });//# sourceURL=expenses/tests/expenses/models/time_util.jshint.js");

;eval("define(\"expenses/tests/expenses/models/user.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - expenses/models\');\n    test(\'expenses/models/user.js should pass jshint\', function() { \n      ok(true, \'expenses/models/user.js should pass jshint.\'); \n    });\n  });//# sourceURL=expenses/tests/expenses/models/user.jshint.js");

;eval("define(\"expenses/tests/expenses/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - expenses\');\n    test(\'expenses/router.js should pass jshint\', function() { \n      ok(true, \'expenses/router.js should pass jshint.\'); \n    });\n  });//# sourceURL=expenses/tests/expenses/router.jshint.js");

;eval("define(\"expenses/tests/expenses/routes/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - expenses/routes\');\n    test(\'expenses/routes/application.js should pass jshint\', function() { \n      ok(true, \'expenses/routes/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=expenses/tests/expenses/routes/application.jshint.js");

;eval("define(\"expenses/tests/expenses/routes/expenses.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - expenses/routes\');\n    test(\'expenses/routes/expenses.js should pass jshint\', function() { \n      ok(true, \'expenses/routes/expenses.js should pass jshint.\'); \n    });\n  });//# sourceURL=expenses/tests/expenses/routes/expenses.jshint.js");

;eval("define(\"expenses/tests/expenses/routes/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - expenses/routes\');\n    test(\'expenses/routes/index.js should pass jshint\', function() { \n      ok(true, \'expenses/routes/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=expenses/tests/expenses/routes/index.jshint.js");

;eval("define(\"expenses/tests/expenses/routes/summary.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - expenses/routes\');\n    test(\'expenses/routes/summary.js should pass jshint\', function() { \n      ok(true, \'expenses/routes/summary.js should pass jshint.\'); \n    });\n  });//# sourceURL=expenses/tests/expenses/routes/summary.jshint.js");

;eval("define(\"expenses/tests/expenses/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - expenses/tests/helpers\');\n    test(\'expenses/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'expenses/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=expenses/tests/expenses/tests/helpers/resolver.jshint.js");

;eval("define(\"expenses/tests/expenses/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - expenses/tests/helpers\');\n    test(\'expenses/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'expenses/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=expenses/tests/expenses/tests/helpers/start-app.jshint.js");

;eval("define(\"expenses/tests/expenses/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - expenses/tests\');\n    test(\'expenses/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'expenses/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=expenses/tests/expenses/tests/test-helper.jshint.js");

;eval("define(\"expenses/tests/expenses/tests/unit/routes/expenses-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - expenses/tests/unit/routes\');\n    test(\'expenses/tests/unit/routes/expenses-test.js should pass jshint\', function() { \n      ok(true, \'expenses/tests/unit/routes/expenses-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=expenses/tests/expenses/tests/unit/routes/expenses-test.jshint.js");

;eval("define(\"expenses/tests/expenses/views/date-field-view.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - expenses/views\');\n    test(\'expenses/views/date-field-view.js should pass jshint\', function() { \n      ok(true, \'expenses/views/date-field-view.js should pass jshint.\'); \n    });\n  });//# sourceURL=expenses/tests/expenses/views/date-field-view.jshint.js");

;eval("define(\"expenses/tests/helpers/pretender-server\", \n  [\"expenses/models/expense\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Expense = __dependency1__[\"default\"];\n    var expenses, makeServer;\n\n    expenses = _.filter(Expense.FIXTURES, function(e) {\n      return e.user_id === 1;\n    });\n\n    makeServer = function() {\n      var server;\n      return server = new Pretender(function() {\n        this.get(\"/expenses\", function(request) {\n          return [\n            200, {\n              \"Content-Type\": \"application/json\"\n            }, JSON.stringify({\n              expenses: expenses\n            })\n          ];\n        });\n        return this.get(\"/expenses/:id\", function(request) {\n          var expense;\n          expense = expenses.find(function(e) {\n            return e.id === parseInt(request.params.id);\n          });\n          return [\n            200, {\n              \"Content-Type\": \"application/json\"\n            }, JSON.stringify({\n              expense: expense\n            })\n          ];\n        });\n      });\n    };\n\n    __exports__[\"default\"] = makeServer;\n  });//# sourceURL=expenses/tests/helpers/pretender-server.js");

;eval("define(\"expenses/tests/helpers/resolver\", \n  [\"ember/resolver\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: \'expenses\'\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=expenses/tests/helpers/resolver.js");

;eval("define(\"expenses/tests/helpers/start-app\", \n  [\"ember\",\"simple-auth-testing/test-helpers\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    /* global require */\n\n    var Application = require(\'expenses/app\')[\'default\'];\n    var Router = require(\'expenses/router\')[\'default\'];\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({\n        // useful Test defaults\n        rootElement: \'#ember-testing\',\n        LOG_ACTIVE_GENERATION:false,\n        LOG_VIEW_LOOKUPS: false\n      }, attrs); // but you can override;\n\n      Router.reopen({\n        location: \'none\'\n      });\n\n      Ember.run(function(){\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      App.reset(); // this shouldn\'t be needed, i want to be able to \"start an app at a specific URL\"\n\n      return App;\n    }\n  });//# sourceURL=expenses/tests/helpers/start-app.js");

;eval("define(\"expenses/tests/helpers/table-helpers\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var f;\n\n    f = function() {\n      Ember.Test.registerAsyncHelper(\'shouldHaveExpenseRowCount\', function(app, n, context) {\n        return equal(findWithAssert(\"#expenses-table tr\", context).length - 2, n);\n      });\n      Ember.Test.registerAsyncHelper(\'fillInExpense\', function(app, field, val, context) {\n        return fillIn(\"#new-expense .\" + field + \" input\", val);\n      });\n      Ember.Test.registerAsyncHelper(\'expenseVal\', function(app, field, rowNum, context) {\n        return findWithAssert(\"#expenses-table tr:eq(\" + rowNum + \") td.\" + field).text();\n      });\n      return Ember.Test.registerAsyncHelper(\'fillInExpenseEdit\', function(app, field, val, rowNum, context) {\n        return fillIn(\"#expenses-table tr:eq(\" + rowNum + \") .\" + field + \" input\", val);\n      });\n    };\n\n    __exports__[\"default\"] = f;\n  });//# sourceURL=expenses/tests/helpers/table-helpers.js");

;eval("define(\"expenses/tests/integration/expenses-edit-test\", \n  [\"expenses/tests/helpers/start-app\",\"expenses/tests/helpers/pretender-server\",\"expenses/tests/helpers/table-helpers\"],\n  function(__dependency1__, __dependency2__, __dependency3__) {\n    \"use strict\";\n    var startApp = __dependency1__[\"default\"];\n    var pretenderServer = __dependency2__[\"default\"];\n    var setupHelpers = __dependency3__[\"default\"];\n    var App, expensesTest, server;\n\n    App = null;\n\n    server = null;\n\n    setupHelpers();\n\n    module(\'Integration - Expenses Edit\', {\n      setup: function() {\n        App = startApp();\n        server = pretenderServer();\n        return Ember.run((function(_this) {\n          return function() {\n            return authenticateSession();\n          };\n        })(this));\n      },\n      teardown: function() {\n        Em.run(App, \'destroy\');\n        return server.shutdown();\n      }\n    });\n\n    expensesTest = function(name, f) {\n      return test(name, function() {\n        return visit(\"/expenses\").then(f);\n      });\n    };\n\n    expensesTest(\'Shows editable fields\', function() {\n      var ensureCount;\n      click(\".edit-mode:eq(0) button\");\n      ensureCount = function(selector, num) {\n        return equal(findWithAssert(\"#expenses-table tr:eq(1) \" + selector).length, num);\n      };\n      ensureCount(\"input\", 4);\n      ensureCount(\"textarea\", 1);\n      ensureCount(\"button\", 1);\n      return ensureCount(\".save\", 1);\n    });\n\n    expensesTest(\'Save\', function() {\n      shouldHaveExpenseRowCount(2);\n      click(\".edit-mode:eq(0) button\");\n      fillInExpenseEdit(\"expense-date\", \"9/1/14\", 1);\n      fillInExpenseEdit(\"description\", \"Lunch\", 1);\n      fillInExpenseEdit(\"amount\", \"32\", 1);\n      click(\".save:eq(0) button\");\n      return andThen((function(_this) {\n        return function() {\n          shouldHaveExpenseRowCount(2);\n          equal(expenseVal(\"expense-date\", 1), \"9/1/14\");\n          return equal(expenseVal(\"amount\", 1), \"$32\");\n        };\n      })(this));\n    });\n  });//# sourceURL=expenses/tests/integration/expenses-edit-test.js");

;eval("define(\"expenses/tests/integration/expenses-filter-test\", \n  [\"expenses/tests/helpers/start-app\",\"expenses/tests/helpers/pretender-server\",\"expenses/tests/helpers/table-helpers\"],\n  function(__dependency1__, __dependency2__, __dependency3__) {\n    \"use strict\";\n    var startApp = __dependency1__[\"default\"];\n    var pretenderServer = __dependency2__[\"default\"];\n    var setupHelpers = __dependency3__[\"default\"];\n    var App, expensesTest, server;\n\n    App = null;\n\n    server = null;\n\n    setupHelpers();\n\n    module(\'Integration - Expenses Filter\', {\n      setup: function() {\n        App = startApp();\n        server = pretenderServer();\n        return Ember.run((function(_this) {\n          return function() {\n            return authenticateSession();\n          };\n        })(this));\n      },\n      teardown: function() {\n        Em.run(App, \'destroy\');\n        return server.shutdown();\n      }\n    });\n\n    expensesTest = function(name, f) {\n      return test(name, function() {\n        return visit(\"/expenses\").then(f);\n      });\n    };\n\n    Ember.Test.registerAsyncHelper(\'fillFilter\', function(app, field, val, context) {\n      return fillIn(\"#expenses-filter #\" + field + \" input\", val);\n    });\n\n    expensesTest(\'Should show filter\', function() {\n      equal(find(\"#expenses-filter\").length, 1);\n      return shouldHaveExpenseRowCount(2);\n    });\n\n    expensesTest(\"amount low\", function() {\n      fillFilter(\"amount-low\", 999);\n      shouldHaveExpenseRowCount(0);\n      fillFilter(\"amount-low\", 1);\n      shouldHaveExpenseRowCount(2);\n      fillFilter(\"amount-low\", 80);\n      return shouldHaveExpenseRowCount(1);\n    });\n\n    expensesTest(\"amount high\", function() {\n      fillFilter(\"amount-high\", 1);\n      shouldHaveExpenseRowCount(0);\n      fillFilter(\"amount-high\", 999);\n      shouldHaveExpenseRowCount(2);\n      fillFilter(\"amount-high\", 80);\n      return shouldHaveExpenseRowCount(1);\n    });\n\n    expensesTest(\"amount both\", function() {\n      fillFilter(\"amount-low\", 1);\n      fillFilter(\"amount-high\", 999);\n      shouldHaveExpenseRowCount(2);\n      fillFilter(\"amount-low\", 80);\n      fillFilter(\"amount-high\", 999);\n      shouldHaveExpenseRowCount(1);\n      fillFilter(\"amount-low\", 80);\n      fillFilter(\"amount-high\", 85);\n      return shouldHaveExpenseRowCount(0);\n    });\n\n    expensesTest(\"dates\", function() {\n      fillFilter(\"date-low\", \"7/1/14\");\n      shouldHaveExpenseRowCount(2);\n      fillFilter(\"date-low\", \"9/1/14\");\n      shouldHaveExpenseRowCount(0);\n      fillFilter(\"date-low\", \"7/1/14\");\n      shouldHaveExpenseRowCount(2);\n      fillFilter(\"date-low\", \"7/1/14\");\n      fillFilter(\"date-high\", \"9/1/14\");\n      shouldHaveExpenseRowCount(2);\n      fillFilter(\"date-high\", \"7/2/14\");\n      shouldHaveExpenseRowCount(0);\n      fillFilter(\"date-high\", \"junk\");\n      return shouldHaveExpenseRowCount(2);\n    });\n  });//# sourceURL=expenses/tests/integration/expenses-filter-test.js");

;eval("define(\"expenses/tests/integration/expenses-index-test\", \n  [\"expenses/tests/helpers/start-app\",\"expenses/tests/helpers/pretender-server\",\"expenses/tests/helpers/table-helpers\"],\n  function(__dependency1__, __dependency2__, __dependency3__) {\n    \"use strict\";\n    var startApp = __dependency1__[\"default\"];\n    var pretenderServer = __dependency2__[\"default\"];\n    var setupHelpers = __dependency3__[\"default\"];\n    var App, server;\n\n    App = null;\n\n    server = null;\n\n    setupHelpers();\n\n    module(\'Integration - Expenses Index\', {\n      setup: function() {\n        App = startApp();\n        server = pretenderServer();\n        return Ember.run((function(_this) {\n          return function() {\n            return authenticateSession();\n          };\n        })(this));\n      },\n      teardown: function() {\n        Em.run(App, \'destroy\');\n        return server.shutdown();\n      }\n    });\n\n    test(\'Should welcome me\', function() {\n      return visit(\"/expenses\").then(function() {\n        return shouldHaveExpenseRowCount(2);\n      });\n    });\n\n    test(\'New Expense Row\', function() {\n      visit(\"/expenses\");\n      return andThen((function(_this) {\n        return function() {\n          return equal(find(\"#expenses-table tr#new-expense\").length, 1);\n        };\n      })(this));\n    });\n\n    test(\'New Expense Save - Date\', function() {\n      visit(\"/expenses\");\n      fillInExpense(\'amount\', 250);\n      fillInExpense(\'expense-date\', \'08/17/2014\');\n      fillInExpense(\'expense-time\', \'9:30\');\n      click(\"#new-expense button\");\n      shouldHaveExpenseRowCount(3);\n      return andThen((function(_this) {\n        return function() {\n          equal(expenseVal(\"amount\", 3), \"$250\");\n          equal(expenseVal(\"expense-date\", 3), \"8/17/14\");\n          return equal(expenseVal(\"expense-time\", 3), \"9:30\");\n        };\n      })(this));\n    });\n\n    test(\'save multiple new expenses\', function() {\n      visit(\"/expenses\");\n      fillInExpense(\'amount\', 300);\n      andThen((function(_this) {\n        return function() {\n          return equal(find(\"#new-expense .amount input\").val(), \"300\");\n        };\n      })(this));\n      click(\"#new-expense button\");\n      shouldHaveExpenseRowCount(3);\n      andThen((function(_this) {\n        return function() {\n          return equal(find(\"#new-expense .amount input\").val(), \"\");\n        };\n      })(this));\n      fillInExpense(\'amount\', 50);\n      fillInExpense(\'expense-date\', \'9/1/14\');\n      click(\"#new-expense button\");\n      shouldHaveExpenseRowCount(4);\n      return andThen((function(_this) {\n        return function() {\n          equal(expenseVal(\"amount\", 3), \"$300\");\n          equal(expenseVal(\"amount\", 4), \"$50\");\n          equal(expenseVal(\'expense-date\', 4), \"9/1/14\");\n          return equal(find(\"#new-expense .amount input\").val(), \"\");\n        };\n      })(this));\n    });\n\n    test(\"save invalid\", function() {\n      visit(\"/expenses\");\n      click(\"#new-expense button\");\n      return andThen((function(_this) {\n        return function() {\n          equal(find(\"#flash\").length, 1);\n          equal(find(\"#flash\").text(), \"Missing Amount\");\n          return shouldHaveExpenseRowCount(2);\n        };\n      })(this));\n    });\n  });//# sourceURL=expenses/tests/integration/expenses-index-test.js");

;eval("define(\"expenses/tests/integration/landing-page-test\", \n  [\"expenses/tests/helpers/start-app\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var startApp = __dependency1__[\"default\"];\n    var App;\n\n    App = null;\n\n    module(\'Integration - Landing Page\', {\n      setup: function() {\n        App = startApp();\n        return Ember.run((function(_this) {\n          return function() {\n            return authenticateSession();\n          };\n        })(this));\n      },\n      teardown: function() {\n        return Em.run(App, \'destroy\');\n      }\n    });\n\n    if (false) {\n      test(\'Should welcome me\', function() {\n        return visit(\"/\").then(function() {\n          return equal(find(\'h2#title\').text(), \'Welcome to Expenses\');\n        });\n      });\n    }\n  });//# sourceURL=expenses/tests/integration/landing-page-test.js");

;eval("define(\"expenses/tests/integration/summary-test\", \n  [\"expenses/tests/helpers/start-app\",\"expenses/tests/helpers/pretender-server\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var startApp = __dependency1__[\"default\"];\n    var pretenderServer = __dependency2__[\"default\"];\n    var App, server;\n\n    App = null;\n\n    server = null;\n\n    module(\'Integration - Expenses Summary\', {\n      setup: function() {\n        App = startApp();\n        server = pretenderServer();\n        return Ember.run((function(_this) {\n          return function() {\n            return authenticateSession();\n          };\n        })(this));\n      },\n      teardown: function() {\n        Em.run(App, \'destroy\');\n        return server.shutdown();\n      }\n    });\n\n    test(\"summary - basic\", function() {\n      visit(\"/expenses\");\n      return andThen((function(_this) {\n        return function() {\n          return equal(find(\"#summary td.amount:eq(0)\").text(), \"$175.42\");\n        };\n      })(this));\n    });\n\n    test(\"summary - updates after add to same week\", function() {\n      visit(\"/expenses\");\n      fillInExpense(\'amount\', 50);\n      fillInExpense(\'expense-date\', \'8/01/14\');\n      fillInExpense(\'expense-time\', \'9:30\');\n      click(\"button\");\n      return andThen((function(_this) {\n        return function() {\n          return equal(find(\"#summary td.amount:eq(0)\").text(), \"$225.42\");\n        };\n      })(this));\n    });\n\n    test(\"summary - updates after add to different week\", function() {\n      visit(\"/expenses\");\n      fillInExpense(\'amount\', 50);\n      fillInExpense(\'expense-date\', \'7/01/14\');\n      fillInExpense(\'expense-time\', \'9:30\');\n      click(\"button\");\n      return andThen((function(_this) {\n        return function() {\n          equal(find(\"#summary tr\").length, 4);\n          equal(find(\"#summary td.amount:eq(0)\").text(), \"$50\");\n          equal(find(\"#summary td.amount:eq(1)\").text(), \"$175.42\");\n          return equal(find(\"#summary td.amount:eq(2)\").text(), \"$225.42\");\n        };\n      })(this));\n    });\n\n    test(\"summary - total row\", function() {\n      visit(\"/expenses\");\n      return andThen((function(_this) {\n        return function() {\n          return equal(find(\"#summary td.amount:eq(1)\").text(), \"$175.42\");\n        };\n      })(this));\n    });\n\n    test(\"summary - visit own page\", function() {\n      visit(\"/summary\");\n      return andThen((function(_this) {\n        return function() {\n          equal(find(\"#summary tr\").length, 3);\n          return equal(find(\"#summary td.amount:eq(0)\").text(), \"$175.42\");\n        };\n      })(this));\n    });\n  });//# sourceURL=expenses/tests/integration/summary-test.js");

;eval("define(\"expenses/tests/integration/unauthorized-user-test\", \n  [\"expenses/tests/helpers/start-app\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var startApp = __dependency1__[\"default\"];\n    var App;\n\n    if (false) {\n      App = null;\n      module(\'Integration - Unauthorized User\', {\n        setup: function() {\n          App = startApp();\n          return Ember.run((function(_this) {\n            return function() {\n              return invalidateSession();\n            };\n          })(this));\n        },\n        teardown: function() {\n          return Em.run(App, \'destroy\');\n        }\n      });\n      test(\'Should Show login link\', function() {\n        return visit(\"/expenses\").then(function() {\n          return equal(find(\"#auth-status #login-link\").length, 1);\n        });\n      });\n      test(\'Shows no expenses\', function() {\n        return visit(\"/expenses\").then(function() {\n          return equal(find(\"#expenses-table\").length, 0);\n        });\n      });\n    }\n  });//# sourceURL=expenses/tests/integration/unauthorized-user-test.js");

;eval("define(\"expenses/tests/test-helper\", \n  [\"expenses/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n  });//# sourceURL=expenses/tests/test-helper.js");

;eval("define(\"expenses/tests/unit/models/expense-test\", \n  [\"ember-qunit\",\"expenses/models/expense\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleForModel = __dependency1__.moduleForModel;\n    var Expense = __dependency2__[\"default\"];\n    moduleForModel(\'expense\', \'Expense\', {\n      needs: []\n    });\n\n    test(\'it exists\', function() {\n      var model;\n      model = this.subject();\n      return ok(model);\n    });\n\n    test(\'fixture count\', function() {\n      return Em.run((function(_this) {\n        return function() {\n          return _this.store().find(\'expense\').then(function(expenses) {\n            return equal(expenses.get(\'content\').length, 3);\n          });\n        };\n      })(this));\n    });\n  });//# sourceURL=expenses/tests/unit/models/expense-test.js");

;eval("define(\"expenses/tests/unit/routes/expenses-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n\n    moduleFor(\'route:expenses\', \'ExpensesRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=expenses/tests/unit/routes/expenses-test.js");

;eval("define(\"expenses/views/date-field-view\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.TextField.extend({\n      picker: null,\n\n      updateValue: function() {\n        var date = moment(this.get(\"date\"));\n        if (date.isValid()) {\n          this.set(\"value\", date.format(\"L\"));\n          this.get(\"picker\").setDate(date.format(\"L\"));\n        } else {\n          this.set(\"value\", null);\n        }\n      }.observes(\"date\"),\n      \n      updateDate: function() {\n        var date = moment(this.get(\"value\"));\n        if (date.isValid()) {\n          this.set(\"date\", date.toDate());\n        } else {\n          this.set(\"date\", null);\n        }\n      }.observes(\"value\"),\n\n      didInsertElement: function() {\n        var picker = new Pikaday({\n          field: this.$()[0],\n          format: \"MM/DD/YYYY\"\n        });\n        this.set(\"picker\", picker);\n        this.updateValue();\n      },\n\n      willDestroyElement: function(){\n        var picker = this.get(\"picker\");\n        if (picker) {\n          picker.destroy();\n        }\n        this.set(\"picker\", null);\n      }\n    });\n  });//# sourceURL=expenses/views/date-field-view.js");
